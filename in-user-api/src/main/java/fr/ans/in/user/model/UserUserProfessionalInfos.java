/*
 * in user api
 * in user api
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package fr.ans.in.user.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.Serializable;
/**
 * UserUserProfessionalInfos
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-12-23T20:51:16.071Z[GMT]")
public class UserUserProfessionalInfos implements Serializable{
  private static final long serialVersionUID = 1L;
  @JsonProperty("professionCode")
  private String professionCode = null;

  @JsonProperty("professionalCategoryCode")
  private String professionalCategoryCode = null;

  @JsonProperty("expertiseTypeCode")
  private String expertiseTypeCode = null;

  @JsonProperty("expertiseCode")
  private String expertiseCode = null;

  @JsonProperty("professionalCivilityTitle")
  private String professionalCivilityTitle = null;

  @JsonProperty("professionalLastName")
  private String professionalLastName = null;

  @JsonProperty("professionalFirstName")
  private String professionalFirstName = null;

  public UserUserProfessionalInfos professionCode(String professionCode) {
    this.professionCode = professionCode;
    return this;
  }

   /**
   * Get professionCode
   * @return professionCode
  **/
  @Schema(required = true, description = "")
  public String getProfessionCode() {
    return professionCode;
  }

  public void setProfessionCode(String professionCode) {
    this.professionCode = professionCode;
  }

  public UserUserProfessionalInfos professionalCategoryCode(String professionalCategoryCode) {
    this.professionalCategoryCode = professionalCategoryCode;
    return this;
  }

   /**
   * Get professionalCategoryCode
   * @return professionalCategoryCode
  **/
  @Schema(required = true, description = "")
  public String getProfessionalCategoryCode() {
    return professionalCategoryCode;
  }

  public void setProfessionalCategoryCode(String professionalCategoryCode) {
    this.professionalCategoryCode = professionalCategoryCode;
  }

  public UserUserProfessionalInfos expertiseTypeCode(String expertiseTypeCode) {
    this.expertiseTypeCode = expertiseTypeCode;
    return this;
  }

   /**
   * Get expertiseTypeCode
   * @return expertiseTypeCode
  **/
  @Schema(required = true, description = "")
  public String getExpertiseTypeCode() {
    return expertiseTypeCode;
  }

  public void setExpertiseTypeCode(String expertiseTypeCode) {
    this.expertiseTypeCode = expertiseTypeCode;
  }

  public UserUserProfessionalInfos expertiseCode(String expertiseCode) {
    this.expertiseCode = expertiseCode;
    return this;
  }

   /**
   * Get expertiseCode
   * @return expertiseCode
  **/
  @Schema(required = true, description = "")
  public String getExpertiseCode() {
    return expertiseCode;
  }

  public void setExpertiseCode(String expertiseCode) {
    this.expertiseCode = expertiseCode;
  }

  public UserUserProfessionalInfos professionalCivilityTitle(String professionalCivilityTitle) {
    this.professionalCivilityTitle = professionalCivilityTitle;
    return this;
  }

   /**
   * Get professionalCivilityTitle
   * @return professionalCivilityTitle
  **/
  @Schema(required = true, description = "")
  public String getProfessionalCivilityTitle() {
    return professionalCivilityTitle;
  }

  public void setProfessionalCivilityTitle(String professionalCivilityTitle) {
    this.professionalCivilityTitle = professionalCivilityTitle;
  }

  public UserUserProfessionalInfos professionalLastName(String professionalLastName) {
    this.professionalLastName = professionalLastName;
    return this;
  }

   /**
   * Get professionalLastName
   * @return professionalLastName
  **/
  @Schema(required = true, description = "")
  public String getProfessionalLastName() {
    return professionalLastName;
  }

  public void setProfessionalLastName(String professionalLastName) {
    this.professionalLastName = professionalLastName;
  }

  public UserUserProfessionalInfos professionalFirstName(String professionalFirstName) {
    this.professionalFirstName = professionalFirstName;
    return this;
  }

   /**
   * Get professionalFirstName
   * @return professionalFirstName
  **/
  @Schema(required = true, description = "")
  public String getProfessionalFirstName() {
    return professionalFirstName;
  }

  public void setProfessionalFirstName(String professionalFirstName) {
    this.professionalFirstName = professionalFirstName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserUserProfessionalInfos userUserProfessionalInfos = (UserUserProfessionalInfos) o;
    return Objects.equals(this.professionCode, userUserProfessionalInfos.professionCode) &&
        Objects.equals(this.professionalCategoryCode, userUserProfessionalInfos.professionalCategoryCode) &&
        Objects.equals(this.expertiseTypeCode, userUserProfessionalInfos.expertiseTypeCode) &&
        Objects.equals(this.expertiseCode, userUserProfessionalInfos.expertiseCode) &&
        Objects.equals(this.professionalCivilityTitle, userUserProfessionalInfos.professionalCivilityTitle) &&
        Objects.equals(this.professionalLastName, userUserProfessionalInfos.professionalLastName) &&
        Objects.equals(this.professionalFirstName, userUserProfessionalInfos.professionalFirstName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(professionCode, professionalCategoryCode, expertiseTypeCode, expertiseCode, professionalCivilityTitle, professionalLastName, professionalFirstName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserUserProfessionalInfos {\n");
    
    sb.append("    professionCode: ").append(toIndentedString(professionCode)).append("\n");
    sb.append("    professionalCategoryCode: ").append(toIndentedString(professionalCategoryCode)).append("\n");
    sb.append("    expertiseTypeCode: ").append(toIndentedString(expertiseTypeCode)).append("\n");
    sb.append("    expertiseCode: ").append(toIndentedString(expertiseCode)).append("\n");
    sb.append("    professionalCivilityTitle: ").append(toIndentedString(professionalCivilityTitle)).append("\n");
    sb.append("    professionalLastName: ").append(toIndentedString(professionalLastName)).append("\n");
    sb.append("    professionalFirstName: ").append(toIndentedString(professionalFirstName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
