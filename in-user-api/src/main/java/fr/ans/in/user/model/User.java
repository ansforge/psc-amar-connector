/*
 * in user api
 * in user api
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package fr.ans.in.user.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.ans.in.user.model.UserUserCivilStatusInfo;
import fr.ans.in.user.model.UserUserProfessionalInfos;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
/**
 * User
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-12-23T20:51:16.071Z[GMT]")
public class User implements Serializable{
  private static final long serialVersionUID = 1L;
  @JsonProperty("nationalId")
  private String nationalId = null;

  @JsonProperty("firstName")
  private String firstName = null;

  @JsonProperty("lastName")
  private String lastName = null;

  @JsonProperty("employeeType")
  private String employeeType = null;

  @JsonProperty("userContactInfo")
  private Object userContactInfo = null;

  @JsonProperty("userProfessionalInfos")
  private List<UserUserProfessionalInfos> userProfessionalInfos = new ArrayList<UserUserProfessionalInfos>();

  @JsonProperty("userCivilStatusInfo")
  private UserUserCivilStatusInfo userCivilStatusInfo = null;

  public User nationalId(String nationalId) {
    this.nationalId = nationalId;
    return this;
  }

   /**
   * Get nationalId
   * @return nationalId
  **/
  @Schema(required = true, description = "")
  public String getNationalId() {
    return nationalId;
  }

  public void setNationalId(String nationalId) {
    this.nationalId = nationalId;
  }

  public User firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @Schema(required = true, description = "")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public User lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @Schema(required = true, description = "")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public User employeeType(String employeeType) {
    this.employeeType = employeeType;
    return this;
  }

   /**
   * Get employeeType
   * @return employeeType
  **/
  @Schema(required = true, description = "")
  public String getEmployeeType() {
    return employeeType;
  }

  public void setEmployeeType(String employeeType) {
    this.employeeType = employeeType;
  }

  public User userContactInfo(Object userContactInfo) {
    this.userContactInfo = userContactInfo;
    return this;
  }

   /**
   * Get userContactInfo
   * @return userContactInfo
  **/
  @Schema(required = true, description = "")
  public Object getUserContactInfo() {
    return userContactInfo;
  }

  public void setUserContactInfo(Object userContactInfo) {
    this.userContactInfo = userContactInfo;
  }

  public User userProfessionalInfos(List<UserUserProfessionalInfos> userProfessionalInfos) {
    this.userProfessionalInfos = userProfessionalInfos;
    return this;
  }

  public User addUserProfessionalInfosItem(UserUserProfessionalInfos userProfessionalInfosItem) {
    this.userProfessionalInfos.add(userProfessionalInfosItem);
    return this;
  }

   /**
   * Get userProfessionalInfos
   * @return userProfessionalInfos
  **/
  @Schema(required = true, description = "")
  public List<UserUserProfessionalInfos> getUserProfessionalInfos() {
    return userProfessionalInfos;
  }

  public void setUserProfessionalInfos(List<UserUserProfessionalInfos> userProfessionalInfos) {
    this.userProfessionalInfos = userProfessionalInfos;
  }

  public User userCivilStatusInfo(UserUserCivilStatusInfo userCivilStatusInfo) {
    this.userCivilStatusInfo = userCivilStatusInfo;
    return this;
  }

   /**
   * Get userCivilStatusInfo
   * @return userCivilStatusInfo
  **/
  @Schema(required = true, description = "")
  public UserUserCivilStatusInfo getUserCivilStatusInfo() {
    return userCivilStatusInfo;
  }

  public void setUserCivilStatusInfo(UserUserCivilStatusInfo userCivilStatusInfo) {
    this.userCivilStatusInfo = userCivilStatusInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.nationalId, user.nationalId) &&
        Objects.equals(this.firstName, user.firstName) &&
        Objects.equals(this.lastName, user.lastName) &&
        Objects.equals(this.employeeType, user.employeeType) &&
        Objects.equals(this.userContactInfo, user.userContactInfo) &&
        Objects.equals(this.userProfessionalInfos, user.userProfessionalInfos) &&
        Objects.equals(this.userCivilStatusInfo, user.userCivilStatusInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nationalId, firstName, lastName, employeeType, userContactInfo, userProfessionalInfos, userCivilStatusInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    
    sb.append("    nationalId: ").append(toIndentedString(nationalId)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    employeeType: ").append(toIndentedString(employeeType)).append("\n");
    sb.append("    userContactInfo: ").append(toIndentedString(userContactInfo)).append("\n");
    sb.append("    userProfessionalInfos: ").append(toIndentedString(userProfessionalInfos)).append("\n");
    sb.append("    userCivilStatusInfo: ").append(toIndentedString(userCivilStatusInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
